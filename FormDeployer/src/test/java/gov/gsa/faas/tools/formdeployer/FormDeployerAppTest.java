/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package gov.gsa.faas.tools.formdeployer;

import org.junit.Test;
import static org.junit.Assert.*;

import java.io.File;
import java.io.IOException;
import java.net.URISyntaxException;
import java.nio.charset.Charset;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Paths;

import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;

import io.github.cdimascio.dotenv.Dotenv;

public class FormDeployerAppTest {

    // //private test helper function
    // static String readFile(String path, Charset encoding) throws IOException
    // {
    //     byte[] encoded = Files.readAllBytes(Paths.get(path));
    //     return new String(encoded, encoding);
    // }

    @Test
    public void testReadFormDefinitionJson() throws IOException, InterruptedException, URISyntaxException {

        //Read the form into a JsonNode structure
        FormDefinition formDef = formDeployerApp.readFormDefinitionJson(formDefinitionPath);
        assertNotNull(formDef);
    }

    @Test
    public void testGetIdByRoleTitle() throws IOException, InterruptedException, URISyntaxException {

        //TODO: Mock
        
        //Get the ID for a given roleTitle
        String anonRoleString = formDeployerApp.getIdByRoleTitle("Anonymous");

        assertNotNull(formDef);
    }

    @Test
    public void testCreateSubmissionAccessWithCreateOwn() throws IOException, InterruptedException, URISyntaxException {

        //Create the Json giving the roleTitle "create_own" submission access
        String submissionAccessJson = formDeployerApp.createSubmissionAccessJsonWithCreateOwn(anonRoleString);

        assertNotNull(formDef);
    }


    @Test
    public void testAddSubmissionAccessToFormDefinition() throws IOException, InterruptedException, URISyntaxException {

        //and then modify the form information to add the "submissionAccess" piece to the formDefinition
        FormDefinition formDefWithAccess = formDeployerApp.addSubmissionAccessToFormDefinition(formDef, submissionAccessJson);

        assertNotNull(formDef);
    }


    @Test
    public void testPublishFormJson() throws IOException, InterruptedException, URISyntaxException {

        //TODO: Mock
        
        //If form exists, put, otherwise POST
        String publishStatus = formDeployerApp.publishFormJson(formDefWithAccess);

        assertNotNull(formDef);
    }

}
